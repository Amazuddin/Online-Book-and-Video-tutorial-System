@model onlineBookAndVideoTutorial.Models.Book

@{
    //Layout = null;
}


<head>
    <meta name="viewport" content="width=device-width" />
   
    <title>Edit</title>
    <style>
        .b-box {
            margin: 26px;
            /*background-color: aliceblue;*/
            padding: 41px;
            border: 1px steelblue;
            border-radius: 25px;
            box-shadow: 0px 0px 20px #d8d4d4;
            background-color: #faf8f3;
        }

        .bbt {
            width: 25%;
        }

        .error {
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-md-12 b-box">

                @using (Html.BeginForm("Edit", "BookAdmin", FormMethod.Post, new { name = "insertForm", id = "insertForm", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <center>
                            <h2 style="margin-bottom: 20px; font-family: Monoton;">Edit Book PDF</h2>
                        </center>
                        @Html.ValidationSummary(true)
                        <div class="form-group row">
                            <div class="col-md-2"> </div>
                            @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <select name="DepartmentId" class="form-control">
                                    <option value="">Select Category</option>
                                    @foreach (var v in ViewBag.Department)
                                    {
                                        if (v.Id == Model.DepartmentId)
                                        {
                                            <option value="@v.Id" selected="selected">@v.DepartmentName</option>
                                            continue;
                                        }
                                        else
                                        {
                                            <option value="@v.Id">@v.DepartmentName</option>
                                        }

                                    }
                                </select>
                            </div>
                        </div>



                        <div class="form-group row">
                            <div class="col-md-2"> </div>
                            @Html.LabelFor(model => model.SemesterId, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <select name="SemesterId" class="form-control">
                                    <option value="">Select Category</option>
                                    @foreach (var v in ViewBag.semester)
                                    {
                                        if (v.Id == Model.SemesterId)
                                        {
                                            <option value="@v.Id" selected="selected">@v.SemesterName</option>
                                            continue;
                                        }
                                        else
                                        {
                                            <option value="@v.Id">@v.SemesterName</option>
                                        }

                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-2"> </div>
                            @Html.LabelFor(model => model.BookName, new {@class = "control-label col-md-2"})
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.BookName, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.BookName)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-2"> </div>
                            @Html.LabelFor(model => model.AuthorName, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AuthorName)
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-2"> </div>
                            @Html.LabelFor(model => model.Pdf, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <input type="file" name="Pdf" />
                                <input type="hidden" name="pastPdf" value="@Model.Pdf" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-12" style="position: absolute; text-align: center;">
                                <input type="submit" value="Edit" style="width: 18%;" class="btn btn-primary" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="text-align: center; margin-top: 27px;">
                                @Html.ActionLink("Back to List", "BookIndex", null, new { @class = "btn btn-warning bbt" })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>


    </div>

</body>

